#!/usr/bin/env ruby
# encoding: UTF-8

require 'rubygems'      if RUBY_VERSION < '1.9'
require 'backports/1.9' if RUBY_VERSION < '1.9'

require_relative '../lib/art-decomp'

input_limit = ARGV.first.to_i.zero? ? 0 : ARGV.shift.to_i

$stdout.sync = true

ARGV.each do |fsm_file|
  fsm = ArtDecomp::FSM.from_kiss fsm_file
  seps = fsm.beta_f.seps
  input_seps = (0...fsm.input_count).map { |i| fsm.beta_x(Set[i]).seps & seps }

  puts
  puts fsm_file
  puts "X seps: #{input_seps.map(&:size).inspect}"

  input_seps.each_with_index { |a, i| puts "#{i} insignificant" if a.empty? }

  (0...input_seps.size).pairs.to_a.each do |a, b|
    next if input_seps[a].empty? or input_seps[b].empty?
    puts "#{a} ⊂ #{b}" if input_seps[a].proper_subset?   input_seps[b]
    puts "#{a} = #{b}" if input_seps[a] ==               input_seps[b]
    puts "#{a} ⊃ #{b}" if input_seps[a].proper_superset? input_seps[b]
  end
end
